{"mappings":"iiBAAA,IAqBIA,EArBJC,EAAAC,EAAA,S,8EAiBIC,EAAW,IAAIC,sB,SAqDaC,G,OAAjBC,EAAgBC,MAAAC,KAAAC,U,GA3DjB,CACVC,KAAM,KACNC,WAAY,QACZC,UAAW,IAMTC,GAAO,EAAAC,EAAAC,WAETC,EAAO,EACPC,EAAgB,GAChBC,EAAc,G,SAKHC,I,OAAAA,EAAfC,EAAAnB,EAAA,CAAAmB,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,IAiBpBC,E,yEAhBJD,EAAEE,iBACFb,EAAKc,QAAQC,UAAY,GAEzBZ,EAAO,EACPC,EAAgBO,EAAEC,OAAOI,SAASC,YAAYC,M,UAC1B,EAAAC,EAAAC,aAAYhB,EAAeD,G,UAA/CE,EAAWgB,EAAAC,KACXtB,EAAKuB,MAAML,MAAQ,GACa,IAA5Bb,EAAYmB,KAAKC,OAAY,C,yCACtBlB,EAAAmB,GAASC,OAAOC,QAAQ,6E,QAInC5B,EAAKc,QAAQe,mBAAmB,aAAa,EAAAC,EAAA5B,SAAaG,IAC1DlB,EAAW,IAAIoB,EAAAwB,GAAJ,CAAmB,cAE9BxB,EAAAmB,GAASC,OAAOK,QAAQ,oBAA0CC,OAAtB5B,EAAY6B,UAAU,aAC9DtB,EAASuB,SAASC,cAAc,cACpC9C,EAAS+C,QAAQzB,G,6CAlBMlB,MAAAC,KAAAC,U,UAyCZH,I,OAAAA,EAAfc,EAAAnB,EAAA,CAAAmB,EAAAC,GAAAC,MAAA,SAAAC,EAAgClB,G,IAEvB8C,EAAAC,EAAAC,EAAAC,EAAAC,E,kEAAAJ,GAAW,EAAXC,GAAW,EAAXC,OAAWG,E,SAAXF,EAAejD,EAAOoD,OAAAC,Y,UAAtBP,GAAAI,EAAAD,EAAWK,QAAAC,KAAA,C,oBAAXL,EAAWxB,MACF8B,eAAc,C,uBACpB7C,GAAQ,EACRhB,EAAS8D,U,WACW,EAAA9B,EAAAC,aAAYhB,EAAeD,G,QAA/CE,EAAWgB,EAAAC,KACXtB,EAAKc,QAAQe,mBAAmB,aAAa,EAAAC,EAAA5B,SAAaG,IAC1DL,EAAKkD,eAAeC,gBAAgB,U,QANvCb,GAAW,E,yEAAXC,GAAW,EAAXC,EAAWnB,EAAA+B,G,4BAAXd,GAAW,MAAXG,EAAWY,QAAXZ,EAAWY,S,sBAAXd,EAAW,C,sBAAXC,E,qIAFsB9C,MAAAC,KAAAC,U,CA5C/BI,EAAKsD,KAAKC,iBAAiB,U,SAGC5C,G,OAAbL,EAAYZ,MAAAC,KAAAC,U","sources":["src/homework-infinityscroll.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nimport getRefs from './refs.js';\nimport createmarkUp from './markup.js';\nimport { fetchImages, scroll } from './helpers.js';\n\n/////Observer\nlet options = {\n    root: null,\n    rootMargin: \"100px\",\n    threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(observerCallback, options);\n////////////////\n\nconst refs = getRefs();\nlet lightbox;\nlet page = 1;\nlet photoToSearch = '';\nlet photosArray = [];\n\nrefs.form.addEventListener('submit', onFormSubmit);\n// refs.loadMoreButton.addEventListener('click', onLoadMore)\n\nasync function onFormSubmit(e) {\n    e.preventDefault();\n    refs.gallery.innerHTML = '';\n\n    page = 1;\n    photoToSearch = e.target.elements.searchQuery.value;\n    photosArray = await fetchImages(photoToSearch, page);\n    refs.input.value = '';\n    if (photosArray.hits.length === 0) {\n        return Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n    }\n    // refs.loadMoreButton.removeAttribute('hidden');\n\n    refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n    lightbox = new SimpleLightbox('.gallery a');\n    // scroll();\n    Notiflix.Notify.success(`Hooray! We found ${photosArray.totalHits} images.`);\n    let target = document.querySelector(\".js-target\");\n    observer.observe(target);\n}\n\n\n// async function onLoadMore() {\n//     console.log(photoToSearch);\n//     console.log(refs.input.value);\n//     if (page === photosArray.totalHits) {\n//         refs.loadMoreButton.setAttribute('hidden', true);\n//         return Notiflix.Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n//     }\n//     page += 1;\n//     lightbox.refresh();\n//     photosArray = await fetchImages(photoToSearch, page);\n//     refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n//     refs.loadMoreButton.removeAttribute('hidden');\n//     console.log(photosArray.totalHits);\n// }\n\n\n\n\n\nasync function observerCallback(entries) {\n    \n    for (const entry of entries) {\n        if (entry.isIntersecting) {\n            page += 1;\n            lightbox.refresh();\n            photosArray = await fetchImages(photoToSearch, page);\n            refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n            refs.loadMoreButton.removeAttribute('hidden');\n        }\n    }\n        \n  \n}\n"],"names":["$a07851f1564660f9$var$lightbox","$bpxeT","parcelRequire","$a07851f1564660f9$var$observer","IntersectionObserver","entries","$a07851f1564660f9$var$_observerCallback","apply","this","arguments","root","rootMargin","threshold","$a07851f1564660f9$var$refs","$foHtm","default","$a07851f1564660f9$var$page","$a07851f1564660f9$var$photoToSearch","$a07851f1564660f9$var$photosArray","$a07851f1564660f9$var$_onFormSubmit","$parcel$interopDefault","$2TvXO","mark","_callee","e","target","preventDefault","gallery","innerHTML","elements","searchQuery","value","$doFtP","fetchImages","_ctx","sent","input","hits","length","$6JpON","Notify","failure","insertAdjacentHTML","$knNGv","$5IjG7","success","concat","totalHits","document","querySelector","observe","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","undefined","Symbol","iterator","next","done","isIntersecting","refresh","loadMoreButton","removeAttribute","t0","return","form","addEventListener"],"version":3,"file":"infinity-scroll.c395a533.js.map"}