{"mappings":"0lBAWA,IAMIA,EAAW,IAAIC,sBAqDnBC,eAAgCC,GAE5B,IAAK,MAAMC,KAASD,EACZC,EAAMC,iBACNC,GAAQ,EACRC,EAASC,UACTC,QAAoB,EAAAC,EAAAC,aAAYC,EAAeN,GAC/CO,EAAKC,QAAQC,mBAAmB,aAAa,EAAAC,EAAAC,SAAaR,IAC1DI,EAAKK,eAAeC,gBAAgB,U,GAnElC,CACVC,KAAM,KACNC,WAAY,QACZC,UAAW,IAMf,MAAMT,GAAO,EAAAU,EAAAN,WACb,IAAIV,EACAD,EAAO,EACPM,EAAgB,GAChBH,EAAc,GAElBI,EAAKW,KAAKC,iBAAiB,UAG3BvB,eAA4BwB,GAQxB,GAPAA,EAAEC,iBACFd,EAAKC,QAAQc,UAAY,GAEzBtB,EAAO,EACPM,EAAgBc,EAAEG,OAAOC,SAASC,YAAYC,MAC9CvB,QAAoB,EAAAC,EAAAC,aAAYC,EAAeN,GAC/CO,EAAKoB,MAAMD,MAAQ,GACa,IAA5BvB,EAAYyB,KAAKC,OACjB,OAAOC,EAAAC,GAASC,OAAOC,QAAQ,4EAInC1B,EAAKC,QAAQC,mBAAmB,aAAa,EAAAC,EAAAC,SAAaR,IAC1DF,EAAW,IAAI6B,EAAAI,GAAJ,CAAmB,cAE9BJ,EAAAC,GAASC,OAAOG,QAAQ,oBAAoBhC,EAAYiC,qBACxD,IAAIb,EAASc,SAASC,cAAc,cACpC5C,EAAS6C,QAAQhB,E","sources":["src/homework-infinityscroll.js"],"sourcesContent":["import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nimport getRefs from './refs.js';\nimport createmarkUp from './markup.js';\nimport { fetchImages, scroll } from './helpers.js';\n\n/////Observer\nlet options = {\n    root: null,\n    rootMargin: \"100px\",\n    threshold: 1.0,\n};\n\nlet observer = new IntersectionObserver(observerCallback, options);\n////////////////\n\nconst refs = getRefs();\nlet lightbox;\nlet page = 1;\nlet photoToSearch = '';\nlet photosArray = [];\n\nrefs.form.addEventListener('submit', onFormSubmit);\n// refs.loadMoreButton.addEventListener('click', onLoadMore)\n\nasync function onFormSubmit(e) {\n    e.preventDefault();\n    refs.gallery.innerHTML = '';\n\n    page = 1;\n    photoToSearch = e.target.elements.searchQuery.value;\n    photosArray = await fetchImages(photoToSearch, page);\n    refs.input.value = '';\n    if (photosArray.hits.length === 0) {\n        return Notiflix.Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n    }\n    // refs.loadMoreButton.removeAttribute('hidden');\n\n    refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n    lightbox = new SimpleLightbox('.gallery a');\n    // scroll();\n    Notiflix.Notify.success(`Hooray! We found ${photosArray.totalHits} images.`);\n    let target = document.querySelector(\".js-target\");\n    observer.observe(target);\n}\n\n\n// async function onLoadMore() {\n//     console.log(photoToSearch);\n//     console.log(refs.input.value);\n//     if (page === photosArray.totalHits) {\n//         refs.loadMoreButton.setAttribute('hidden', true);\n//         return Notiflix.Notify.failure(\"We're sorry, but you've reached the end of search results.\");\n//     }\n//     page += 1;\n//     lightbox.refresh();\n//     photosArray = await fetchImages(photoToSearch, page);\n//     refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n//     refs.loadMoreButton.removeAttribute('hidden');\n//     console.log(photosArray.totalHits);\n// }\n\n\n\n\n\nasync function observerCallback(entries) {\n    \n    for (const entry of entries) {\n        if (entry.isIntersecting) {\n            page += 1;\n            lightbox.refresh();\n            photosArray = await fetchImages(photoToSearch, page);\n            refs.gallery.insertAdjacentHTML('beforeend', createmarkUp(photosArray));\n            refs.loadMoreButton.removeAttribute('hidden');\n        }\n    }\n        \n  \n}\n"],"names":["$11099d8b04f0a25c$var$observer","IntersectionObserver","async","entries","entry","isIntersecting","$11099d8b04f0a25c$var$page","$11099d8b04f0a25c$var$lightbox","refresh","$11099d8b04f0a25c$var$photosArray","$gJuA9","fetchImages","$11099d8b04f0a25c$var$photoToSearch","$11099d8b04f0a25c$var$refs","gallery","insertAdjacentHTML","$bG4Km","default","loadMoreButton","removeAttribute","root","rootMargin","threshold","$cLm0d","form","addEventListener","e","preventDefault","innerHTML","target","elements","searchQuery","value","input","hits","length","$parcel$interopDefault","$7Y9D8","Notify","failure","$fZKcF","success","totalHits","document","querySelector","observe"],"version":3,"file":"infinity-scroll.77fe9369.js.map"}